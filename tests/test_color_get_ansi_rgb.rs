use debug_et_diagnostics::get_ansi_rgb;

// #[test]
// fn test_standard() {
//     assert_get_ansi_rgb!(0, [0, 0, 0]);
//     assert_get_ansi_rgb!(1, [205, 0, 0]);
//     assert_get_ansi_rgb!(2, [0, 205, 0]);
//     assert_get_ansi_rgb!(3, [205, 205, 0]);
//     assert_get_ansi_rgb!(4, [0, 0, 238]);
//     assert_get_ansi_rgb!(5, [205, 0, 205]);
//     assert_get_ansi_rgb!(6, [0, 205, 205]);
//     assert_get_ansi_rgb!(7, [229, 229, 229]);
//     assert_get_ansi_rgb!(8, [175, 0, 175]);
//     assert_get_ansi_rgb!(9, [255, 0, 0]);
//     assert_get_ansi_rgb!(10, [0, 255, 0]);
//     assert_get_ansi_rgb!(11, [255, 255, 0]);
//     assert_get_ansi_rgb!(12, [92, 92, 255]);
//     assert_get_ansi_rgb!(13, [255, 0, 255]);
//     assert_get_ansi_rgb!(14, [0, 255, 255]);
//     assert_get_ansi_rgb!(15, [255, 255, 255]);
//     assert_get_ansi_rgb!(16, [0, 0, 0]);
// }

#[test]
fn test_cube() {
    assert_get_ansi_rgb!(17, [135, 95, 95]);
    assert_get_ansi_rgb!(18, [175, 95, 255]);
    assert_get_ansi_rgb!(19, [215, 135, 175]);
    assert_get_ansi_rgb!(20, [255, 175, 95]);
    assert_get_ansi_rgb!(21, [0, 0, 255]);
    assert_get_ansi_rgb!(22, [0, 95, 0]);
    assert_get_ansi_rgb!(23, [0, 95, 95]);
    assert_get_ansi_rgb!(24, [0, 95, 135]);
    assert_get_ansi_rgb!(25, [0, 95, 175]);
    assert_get_ansi_rgb!(26, [0, 95, 215]);
    assert_get_ansi_rgb!(27, [0, 95, 255]);
    assert_get_ansi_rgb!(28, [0, 135, 0]);
    assert_get_ansi_rgb!(29, [0, 135, 95]);
    assert_get_ansi_rgb!(30, [0, 135, 135]);
    assert_get_ansi_rgb!(31, [0, 135, 175]);
    assert_get_ansi_rgb!(32, [0, 135, 215]);
    assert_get_ansi_rgb!(33, [0, 135, 255]);
    assert_get_ansi_rgb!(34, [0, 175, 0]);
    assert_get_ansi_rgb!(35, [0, 175, 95]);
    assert_get_ansi_rgb!(36, [0, 175, 135]);
    assert_get_ansi_rgb!(37, [0, 175, 175]);
    assert_get_ansi_rgb!(38, [0, 175, 215]);
    assert_get_ansi_rgb!(39, [0, 175, 255]);
    assert_get_ansi_rgb!(40, [0, 215, 0]);
    assert_get_ansi_rgb!(41, [0, 215, 95]);
    assert_get_ansi_rgb!(42, [0, 215, 135]);
    assert_get_ansi_rgb!(43, [0, 215, 175]);
    assert_get_ansi_rgb!(44, [0, 215, 215]);
    assert_get_ansi_rgb!(45, [0, 215, 255]);
    assert_get_ansi_rgb!(46, [0, 255, 0]);
    assert_get_ansi_rgb!(47, [0, 255, 95]);
    assert_get_ansi_rgb!(48, [0, 255, 135]);
    assert_get_ansi_rgb!(49, [0, 255, 175]);
    assert_get_ansi_rgb!(50, [0, 255, 215]);
    assert_get_ansi_rgb!(51, [0, 255, 255]);
    assert_get_ansi_rgb!(52, [135, 95, 95]);
    assert_get_ansi_rgb!(53, [0, 0, 0]);
    assert_get_ansi_rgb!(54, [255, 175, 135]);
    assert_get_ansi_rgb!(55, [88, 88, 88]);
    assert_get_ansi_rgb!(56, [175, 135, 0]);
    assert_get_ansi_rgb!(57, [215, 0, 0]);
    assert_get_ansi_rgb!(58, [0, 0, 0]);
    assert_get_ansi_rgb!(59, [135, 95, 95]);
    assert_get_ansi_rgb!(60, [175, 95, 255]);
    assert_get_ansi_rgb!(61, [95, 95, 175]);
    assert_get_ansi_rgb!(62, [95, 95, 215]);
    assert_get_ansi_rgb!(63, [95, 95, 255]);
    assert_get_ansi_rgb!(64, [95, 135, 0]);
    assert_get_ansi_rgb!(65, [95, 135, 95]);
    assert_get_ansi_rgb!(66, [95, 135, 135]);
    assert_get_ansi_rgb!(67, [95, 135, 175]);
    assert_get_ansi_rgb!(68, [95, 135, 215]);
    assert_get_ansi_rgb!(69, [95, 135, 255]);
    assert_get_ansi_rgb!(70, [95, 175, 0]);
    assert_get_ansi_rgb!(71, [95, 175, 95]);
    assert_get_ansi_rgb!(72, [95, 175, 135]);
    assert_get_ansi_rgb!(73, [95, 175, 175]);
    assert_get_ansi_rgb!(74, [95, 175, 215]);
    assert_get_ansi_rgb!(75, [95, 175, 255]);
    assert_get_ansi_rgb!(76, [95, 215, 0]);
    assert_get_ansi_rgb!(77, [95, 215, 95]);
    assert_get_ansi_rgb!(78, [95, 215, 135]);
    assert_get_ansi_rgb!(79, [95, 215, 175]);
    assert_get_ansi_rgb!(80, [95, 215, 215]);
    assert_get_ansi_rgb!(81, [95, 215, 255]);
    assert_get_ansi_rgb!(82, [95, 255, 0]);
    assert_get_ansi_rgb!(83, [95, 255, 95]);
    assert_get_ansi_rgb!(84, [95, 255, 135]);
    assert_get_ansi_rgb!(85, [95, 255, 175]);
    assert_get_ansi_rgb!(86, [95, 255, 215]);
    assert_get_ansi_rgb!(87, [95, 255, 255]);
    assert_get_ansi_rgb!(88, [175, 95, 255]);
    assert_get_ansi_rgb!(89, [255, 175, 135]);
    assert_get_ansi_rgb!(90, [0, 0, 0]);
    assert_get_ansi_rgb!(91, [0, 215, 0]);
    assert_get_ansi_rgb!(92, [95, 215, 215]);
    assert_get_ansi_rgb!(93, [135, 0, 255]);
    assert_get_ansi_rgb!(94, [135, 95, 0]);
    assert_get_ansi_rgb!(95, [135, 95, 95]);
    assert_get_ansi_rgb!(96, [135, 95, 135]);
    assert_get_ansi_rgb!(97, [135, 95, 175]);
    assert_get_ansi_rgb!(98, [135, 95, 215]);
    assert_get_ansi_rgb!(99, [135, 95, 255]);
    assert_get_ansi_rgb!(100, [135, 135, 0]);
    assert_get_ansi_rgb!(101, [135, 135, 95]);
    assert_get_ansi_rgb!(102, [135, 135, 135]);
    assert_get_ansi_rgb!(103, [135, 135, 175]);
    assert_get_ansi_rgb!(104, [135, 135, 215]);
    assert_get_ansi_rgb!(105, [135, 135, 255]);
    assert_get_ansi_rgb!(106, [135, 175, 0]);
    assert_get_ansi_rgb!(107, [135, 175, 95]);
    assert_get_ansi_rgb!(108, [135, 175, 135]);
    assert_get_ansi_rgb!(109, [135, 175, 175]);
    assert_get_ansi_rgb!(110, [135, 175, 215]);
    assert_get_ansi_rgb!(111, [135, 175, 255]);
    assert_get_ansi_rgb!(112, [135, 215, 0]);
    assert_get_ansi_rgb!(113, [135, 215, 95]);
    assert_get_ansi_rgb!(114, [135, 215, 135]);
    assert_get_ansi_rgb!(115, [135, 215, 175]);
    assert_get_ansi_rgb!(116, [135, 215, 215]);
    assert_get_ansi_rgb!(117, [135, 215, 255]);
    assert_get_ansi_rgb!(118, [135, 255, 0]);
    assert_get_ansi_rgb!(119, [135, 255, 95]);
    assert_get_ansi_rgb!(120, [135, 255, 135]);
    assert_get_ansi_rgb!(121, [135, 255, 175]);
    assert_get_ansi_rgb!(122, [135, 255, 215]);
    assert_get_ansi_rgb!(123, [135, 255, 255]);
    assert_get_ansi_rgb!(124, [175, 0, 0]);
    assert_get_ansi_rgb!(125, [175, 0, 95]);
    assert_get_ansi_rgb!(126, [175, 0, 135]);
    assert_get_ansi_rgb!(127, [175, 0, 175]);
    assert_get_ansi_rgb!(128, [175, 0, 215]);
    assert_get_ansi_rgb!(129, [175, 0, 255]);
    assert_get_ansi_rgb!(130, [175, 95, 0]);
    assert_get_ansi_rgb!(131, [175, 95, 95]);
    assert_get_ansi_rgb!(132, [175, 95, 135]);
    assert_get_ansi_rgb!(133, [175, 95, 175]);
    assert_get_ansi_rgb!(134, [175, 95, 215]);
    assert_get_ansi_rgb!(135, [175, 95, 255]);
    assert_get_ansi_rgb!(136, [175, 135, 0]);
    assert_get_ansi_rgb!(137, [175, 135, 95]);
    assert_get_ansi_rgb!(138, [175, 135, 135]);
    assert_get_ansi_rgb!(139, [175, 135, 175]);
    assert_get_ansi_rgb!(140, [175, 135, 215]);
    assert_get_ansi_rgb!(141, [175, 135, 255]);
    assert_get_ansi_rgb!(142, [175, 175, 0]);
    assert_get_ansi_rgb!(143, [175, 175, 95]);
    assert_get_ansi_rgb!(144, [175, 175, 135]);
    assert_get_ansi_rgb!(145, [175, 175, 175]);
    assert_get_ansi_rgb!(146, [175, 175, 215]);
    assert_get_ansi_rgb!(147, [175, 175, 255]);
    assert_get_ansi_rgb!(148, [175, 215, 0]);
    assert_get_ansi_rgb!(149, [175, 215, 95]);
    assert_get_ansi_rgb!(150, [175, 215, 135]);
    assert_get_ansi_rgb!(151, [175, 215, 175]);
    assert_get_ansi_rgb!(152, [175, 215, 215]);
    assert_get_ansi_rgb!(153, [175, 215, 255]);
    assert_get_ansi_rgb!(154, [175, 255, 0]);
    assert_get_ansi_rgb!(155, [175, 255, 95]);
    assert_get_ansi_rgb!(156, [175, 255, 135]);
    assert_get_ansi_rgb!(157, [175, 0, 175]);
    assert_get_ansi_rgb!(158, [175, 0, 215]);
    assert_get_ansi_rgb!(159, [175, 0, 0]);
    assert_get_ansi_rgb!(160, [215, 0, 0]);
    assert_get_ansi_rgb!(161, [215, 0, 95]);
    assert_get_ansi_rgb!(162, [215, 0, 135]);
    assert_get_ansi_rgb!(163, [215, 0, 175]);
    assert_get_ansi_rgb!(164, [215, 0, 215]);
    assert_get_ansi_rgb!(165, [215, 0, 0]);
    assert_get_ansi_rgb!(166, [215, 95, 0]);
    assert_get_ansi_rgb!(167, [215, 95, 95]);
    assert_get_ansi_rgb!(168, [215, 95, 135]);
    assert_get_ansi_rgb!(169, [215, 95, 175]);
    assert_get_ansi_rgb!(170, [215, 95, 215]);
    assert_get_ansi_rgb!(171, [215, 95, 0]);
    assert_get_ansi_rgb!(172, [215, 135, 0]);
    assert_get_ansi_rgb!(173, [215, 135, 95]);
    assert_get_ansi_rgb!(174, [215, 135, 135]);
    assert_get_ansi_rgb!(175, [215, 135, 175]);
    assert_get_ansi_rgb!(176, [215, 135, 215]);
    assert_get_ansi_rgb!(177, [215, 135, 0]);
    assert_get_ansi_rgb!(178, [215, 175, 0]);
    assert_get_ansi_rgb!(179, [215, 175, 95]);
    assert_get_ansi_rgb!(180, [215, 175, 135]);
    assert_get_ansi_rgb!(181, [215, 175, 175]);
    assert_get_ansi_rgb!(182, [215, 175, 215]);
    assert_get_ansi_rgb!(183, [215, 175, 0]);
    assert_get_ansi_rgb!(184, [215, 215, 0]);
    assert_get_ansi_rgb!(185, [215, 215, 95]);
    assert_get_ansi_rgb!(186, [215, 215, 135]);
    assert_get_ansi_rgb!(187, [215, 215, 175]);
    assert_get_ansi_rgb!(188, [215, 215, 215]);
    assert_get_ansi_rgb!(189, [215, 215, 0]);
    assert_get_ansi_rgb!(190, [215, 0, 0]);
    assert_get_ansi_rgb!(191, [215, 0, 95]);
    assert_get_ansi_rgb!(192, [215, 0, 135]);
    assert_get_ansi_rgb!(193, [215, 0, 175]);
    assert_get_ansi_rgb!(194, [215, 0, 215]);
    assert_get_ansi_rgb!(195, [215, 0, 0]);
    assert_get_ansi_rgb!(196, [0, 0, 0]);
    assert_get_ansi_rgb!(197, [0, 0, 95]);
    assert_get_ansi_rgb!(198, [0, 0, 135]);
    assert_get_ansi_rgb!(199, [0, 0, 175]);
    assert_get_ansi_rgb!(200, [0, 0, 215]);
    assert_get_ansi_rgb!(201, [0, 0, 0]);
    assert_get_ansi_rgb!(202, [0, 95, 0]);
    assert_get_ansi_rgb!(203, [0, 95, 95]);
    assert_get_ansi_rgb!(204, [0, 95, 135]);
    assert_get_ansi_rgb!(205, [0, 95, 175]);
    assert_get_ansi_rgb!(206, [0, 95, 215]);
    assert_get_ansi_rgb!(207, [0, 95, 0]);
    assert_get_ansi_rgb!(208, [0, 135, 0]);
    assert_get_ansi_rgb!(209, [0, 135, 95]);
    assert_get_ansi_rgb!(210, [0, 135, 135]);
    assert_get_ansi_rgb!(211, [0, 135, 175]);
    assert_get_ansi_rgb!(212, [0, 135, 215]);
    assert_get_ansi_rgb!(213, [0, 135, 0]);
    assert_get_ansi_rgb!(214, [0, 175, 0]);
    assert_get_ansi_rgb!(215, [0, 175, 95]);
    assert_get_ansi_rgb!(216, [0, 175, 135]);
    assert_get_ansi_rgb!(217, [0, 175, 175]);
    assert_get_ansi_rgb!(218, [0, 175, 215]);
    assert_get_ansi_rgb!(219, [0, 175, 0]);
    assert_get_ansi_rgb!(220, [0, 215, 0]);
    assert_get_ansi_rgb!(221, [0, 215, 95]);
    assert_get_ansi_rgb!(222, [0, 215, 135]);
    assert_get_ansi_rgb!(223, [0, 215, 175]);
    assert_get_ansi_rgb!(224, [0, 215, 215]);
    assert_get_ansi_rgb!(225, [0, 215, 0]);
    assert_get_ansi_rgb!(226, [0, 0, 0]);
    assert_get_ansi_rgb!(227, [0, 0, 95]);
    assert_get_ansi_rgb!(228, [0, 0, 135]);
    assert_get_ansi_rgb!(229, [0, 0, 175]);
    assert_get_ansi_rgb!(230, [0, 0, 215]);
    assert_get_ansi_rgb!(231, [0, 0, 0]);
    assert_get_ansi_rgb!(232, [8, 8, 8]);
}

// #[test]
// fn test_grayscale() {
//     assert_get_ansi_rgb!(233, [18, 18, 18]);
//     assert_get_ansi_rgb!(234, [28, 28, 28]);
//     assert_get_ansi_rgb!(235, [38, 38, 38]);
//     assert_get_ansi_rgb!(236, [48, 48, 48]);
//     assert_get_ansi_rgb!(237, [58, 58, 58]);
//     assert_get_ansi_rgb!(238, [68, 68, 68]);
//     assert_get_ansi_rgb!(239, [78, 78, 78]);
//     assert_get_ansi_rgb!(240, [88, 88, 88]);
//     assert_get_ansi_rgb!(241, [98, 98, 98]);
//     assert_get_ansi_rgb!(242, [108, 108, 108]);
//     assert_get_ansi_rgb!(243, [118, 118, 118]);
//     assert_get_ansi_rgb!(244, [128, 128, 128]);
//     assert_get_ansi_rgb!(245, [138, 138, 138]);
//     assert_get_ansi_rgb!(246, [148, 148, 148]);
//     assert_get_ansi_rgb!(247, [158, 158, 158]);
//     assert_get_ansi_rgb!(248, [168, 168, 168]);
//     assert_get_ansi_rgb!(249, [178, 178, 178]);
//     assert_get_ansi_rgb!(250, [188, 188, 188]);
//     assert_get_ansi_rgb!(251, [198, 198, 198]);
//     assert_get_ansi_rgb!(252, [208, 208, 208]);
//     assert_get_ansi_rgb!(253, [218, 218, 218]);
//     assert_get_ansi_rgb!(254, [228, 228, 228]);
//     assert_get_ansi_rgb!(255, [0, 0, 0]);
// }

#[macro_export]
macro_rules! assert_get_ansi_rgb {
    (
        $ansi:expr,
        $expected_slice:expr
        $(,)?
    ) => {{
        let ansi = wrap($ansi as usize);
        use ansi_colours::rgb_from_ansi256;
        use debug_et_diagnostics::{format_slice_hex, wrap, format_slice_display};
        assert_eq!(get_ansi_rgb(ansi as usize), $expected_slice, "expected get_ansi_rgb({ansi}) to equal {}", format_slice_display($expected_slice, true));
        let tuple = rgb_from_ansi256(ansi);
        let ansi_colours_slice = [tuple.0, tuple.1, tuple.2];
        assert_eq!(
            ansi_colours_slice,
            $expected_slice,
            "expected rgb_from_ansi256({ansi}) to equal {} but got {}",
            format_slice_display($expected_slice, true),
            format_slice_display(ansi_colours_slice, true)
        );
    }};
}
